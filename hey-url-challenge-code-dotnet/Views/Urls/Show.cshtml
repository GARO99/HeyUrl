@model hey_url_challenge_code_dotnet.ViewModels.ShowViewModel
@{
    ViewBag.Title = "Show";
    Layout = "_Layout";
    string createAtDate = Model.Url.CreateAt.ToString("MMM dd, yyyy");
    createAtDate = createAtDate.Substring(0, 1).ToUpper() + createAtDate.Substring(1).ToLower();
}

<div class="row">
    <div class="col s12">
      @if (Model == null)
        {
            <ul class="card-panel collection with-header">
                <li class="collection-header">
                    <h4>Warning</h4>
                </li>
                <li class="collection-item">
                    <div class="card-panel notice yellow darken-3 white-text">@TempData["heyUrlError"]</div>
                </li>
            </ul>
           
        }else{
            <ul class="card-panel collection with-header">
                <li class="collection-header">
                    <h4>
                        Stats for <a href="@Model.Url.ShortUrl">@Model.Url.ShortUrl</a>
                    </h4>
                </li>
                <li class="collection-item">Created @createAtDate</li>
                <li class="collection-item">
                    Original URL: @Model.Url.OriginalUrl
                </li>
            </ul>
        }
    </div>
  </div>
@if (Model != null)
{
 <div class="row">
    <div class="col s12">
      <div class="card-panel">
            @if (Model.Url.DailyUrlClick.Count  > 0)
            {
                <div id="total-clicks-chart"></div>
            }
            else
            {
                <span class="card-title text-darken"><b>Total clicks</b></span>
                <div class="card-panel notice blue lighten-3 white-text">No data</div>
            }
      </div>
    </div>
  </div>

  <div class="row">
    <div class="col s6">
      <div class="card-panel">
        <div id="platforms-chart"></div>
      </div>
    </div>

    <div class="col s6">
      <div class="card-panel">
        <div id="browsers-chart"></div>
      </div>
    </div>
  </div>

  <script>
    google.charts.load('current', {packages: ['corechart']});
    google.charts.setOnLoadCallback(drawCharts);
    function drawTotalClicksChart() {
      var data = google.visualization.arrayToDataTable([
        ['day', 'clicks'],
      ].concat(@Json.Serialize(Model.Url.DailyUrlClick.Select(e => new object[] { e.DayNumber, e.ClickCount }))));
      var options = {
        title: 'Total clicks',
        hAxis: {
          title: 'day'
        },
        vAxis: {
          title: 'clicks',
          minValue: 0
        }
      };
      var chart = new google.visualization.AreaChart(
        document.getElementById('total-clicks-chart')
      );
      chart.draw(data, options);
    }
    function drawBrowsersChart() {
      var data = google.visualization.arrayToDataTable([
        ['browser', 'clicks'],
      ].concat(@Json.Serialize(Model.Url.BrowseUrlClick.Select(e => new object[] { e.Name, e.ClickCount }))));
      var options = {
        title: 'Browsers'
      };
      var chart = new google.visualization.PieChart(
        document.getElementById('browsers-chart')
      );
      chart.draw(data, options);
    }
    function drawPlatformsChart() {
      var data = google.visualization.arrayToDataTable([
        ['platform', 'clicks'],
      ].concat(@Json.Serialize(Model.Url.PlatformUrlClick.Select(e => new object[] { e.Name, e.ClickCount }))));
      var options = {
        title: 'Platform'
      };
      var chart = new google.visualization.PieChart(
        document.getElementById('platforms-chart')
      );
      chart.draw(data, options);
    }
    function drawCharts() {
    @if (Model.Url.DailyUrlClick.Count > 0)
    {
        <text>
            drawTotalClicksChart();
        </text>
    }      
      drawBrowsersChart();
      drawPlatformsChart();
    }
  </script>   
}